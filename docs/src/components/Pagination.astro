---
interface Props {
  next?: string;
  prev?: string;
  lang: string;
}

const { next, prev, lang } = Astro.props as Props;
const nextLink = `/${lang}/${next}`;
const prevLink = `/${lang}/${prev}`;

// Matches last / of string and replace the "-" with spaces to get the next or prev page title.
const nextPage = next?.split('/').slice(-1)[0].replace('-', ' ');
const previousPage = prev?.split('/').slice(-1)[0].replace('-', ' ');
---

<style>
  aside {
    display: flex;
    gap: 1rem;
  }

  a {
    display: flex;
    padding: 1rem;
    border-radius: 8px;
    border: 1px solid var(--theme-text-lighter);
    flex: 1;
    line-height: 120%;
    transition: border-color 200ms cubic-bezier(0.08, 0.52, 0.52, 1);
    color: var(--theme-text);
    text-decoration: none;
  }

  a:hover {
    border-color: var(--theme-accent);
    color: var(--theme-accent);
    text-decoration: none;
  }

  div {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    text-align: left;
  }

  .next div {
    text-align: right;
  }

  span {
    font-size: 0.875rem;
    font-weight: 600;
  }

  strong {
    text-transform: capitalize;
  }
</style>

<aside>
  {
    prev && (
      <a href={prevLink} class='previous'>
        <div>
          <span>Previous</span>
          <strong>
            <span class='icon'>«</span> {previousPage}
          </strong>
        </div>
      </a>
    )
  }
  {
    next && (
      <a href={nextLink} class='next'>
        <div>
          <span>Next</span>
          <strong>
            {nextPage} <span class='icon'>»</span>
          </strong>
        </div>
      </a>
    )
  }
</aside>
